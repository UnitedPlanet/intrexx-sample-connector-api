plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.8.10'
}

apply plugin: 'java-library'

kotlin {
	jvmToolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
}

group   = 'de.uplanet.lucy'
version = '11.0.0'

repositories
{
	mavenCentral()

	flatDir
	{
		dirs "${gradle.INTREXX_HOME}/lib"
	}
}


dependencies
{
	implementation name: 'odata4j-fat-0.8.0'
	implementation name: 'up-json-simple-1.1.9'
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.6'
	implementation group: 'org.apache.olingo', name: 'odata-client-core', version: '4.9.0'
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
	implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'
	implementation (group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.5.2.RELEASE') {
		transitive = false
	}

	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation "org.jetbrains.kotlin:kotlin-reflect"	
	implementation group: 'com.beust', name: 'klaxon', version: '5.6'

	implementation group: 'de.uplanet.lucy', name: 'ix-common',  version: version {
		transitive = false
	}

	implementation group: 'de.uplanet.lucy', name: 'ix-server', version: version {
		transitive = false
	}

	implementation group: 'de.uplanet.lucy', name: 'ix-auxiliaries', version: version {
		transitive = false
	}

	testImplementation group: 'org.easymock',      name: 'easymock',             version: '4.3'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api',    version: '5.8.2'
	testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.8.2'

	testRuntimeOnly    group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'
}


jar {
    manifest {
        //from('src/main/resources/META-INF/MANIFEST.MF')
        attributes(
            'Specification-Title':    project.name,
            'Specification-Version':  archiveVersion,
            'Implementation-Title':   project.name,
            'Implementation-Version': archiveVersion)
    }
}


task copyDependencies(type: Copy) {
	from configurations.default
	into 'build/dependencies'
}

task deployToPortal(type: Copy) {
	dependsOn 'clean'
	dependsOn 'build'
	dependsOn ':copyDependencies'
	tasks.findByName('build').mustRunAfter 'clean'
 	tasks.findByName('copyDependencies').mustRunAfter 'build'
	from ('build/libs') {
			include '*.jar'
	}
	from ('build/dependencies') {
		include 'kotlin*.jar'
		include 'klaxon*.jar'
	}
	into "$gradle.INTREXX_PORTAL_DIR/lib"
}


task startPortal (type: JavaExec) {
	standardOutput = System.out
	errorOutput = System.err

classpath = (sourceSets.main.runtimeClasspath + 
			 fileTree(include: ['*.jar'], dir: "${gradle.INTREXX_HOME}/lib") +
			 fileTree(include: ['*.jar'], dir: "${gradle.INTREXX_HOME}/lib/standalone") +
			 fileTree(include: ['*.jar'], dir: "${gradle.INTREXX_HOME}/lib/custom"))

	//doFirst {println classpath.join(',');println gradle.INTREXX_LOG4J_CFG}

	mainClass = 'de.uplanet.lucy.server.portalserver.PortalService'

	jvmArgs '-Dfile.encoding=UTF-8'
	jvmArgs '-Djava.locale.providers=COMPAT,SPI'
    jvmArgs '-Dgroovy.source.encoding=UTF-8'
	jvmArgs "-Djava.library.path=${gradle.INTREXX_JRE_LIB_PATH}"
	jvmArgs "-Dlog4j.configurationFile=${gradle.INTREXX_LOG4J_CFG}"
	jvmArgs '-Djava.security.auth.login.config=file:internal/cfg/LucyAuth.cfg'
	jvmArgs '-Dcom.sun.management.jmxremote.port=9500'
	jvmArgs '-Dcom.sun.management.jmxremote.authenticate=false'
	jvmArgs '-Dcom.sun.management.jmxremote.ssl=false'
	jvmArgs '-Xms512m'
	jvmArgs '-Xmx1024m'
	jvmArgs '-Djava.io.tmpdir=internal/tmp'
	jvmArgs '-Djava.net.preferIPv4Stack=true'
	jvmArgs '-Dde.uplanet.lucy.server.composer.ixservlet.debug.json=true'
	jvmArgs '-Dde.uplanet.jdbc.trace=false'
	environment ([INTREXX_HOME: gradle.INTREXX_HOME])
	workingDir gradle.INTREXX_PORTAL_DIR
}